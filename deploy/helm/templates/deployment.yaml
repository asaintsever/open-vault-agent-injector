apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "open-vault-agent-injector.fullname" . }}
  labels:
{{ include "open-vault-agent-injector.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount | int }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit | int }}
  selector:
    matchLabels:
      com.ovai.application: {{ .Values.image.applicationNameLabel }}
      com.ovai.service: {{ .Values.image.serviceNameLabel }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        com.ovai.application: {{ .Values.image.applicationNameLabel }}
        com.ovai.service: {{ .Values.image.serviceNameLabel }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      {{- if .Values.registryKey }}
      imagePullSecrets:
        - name: {{ .Values.registryKey }}
      {{- end }}
      serviceAccountName: open-vault-agent-injector
      containers:
        - name: {{ include "open-vault-agent-injector.fullname" . }}
          image: {{ include "open-vault-agent-injector.image" .Values }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - webhook
            - -port={{ .Values.image.port }}
            - -metricsport={{ .Values.image.metricsPort }}
            - -cacertfile=/opt/ovai/webhook/certs/{{ .Values.mutatingwebhook.cert.cacertfile }}
            - -certfile=/opt/ovai/webhook/certs/{{ .Values.mutatingwebhook.cert.certfile }}
            - -keyfile=/opt/ovai/webhook/certs/{{ .Values.mutatingwebhook.cert.keyfile }}
            - -webhookcfgname={{ include "open-vault-agent-injector.fullname" . }}
            - -annotationkeyprefix={{ .Values.mutatingwebhook.annotations.keyPrefix }}
            - -applabelkey={{ .Values.mutatingwebhook.annotations.appLabelKey }}
            - -appservicelabelkey={{ .Values.mutatingwebhook.annotations.appServiceLabelKey }}
            - -injectioncfgfile=/opt/ovai/webhook/config/injectionconfig.yaml
            - -proxycfgfile=/opt/ovai/webhook/config/proxyconfig.hcl
            - -tmplblockfile=/opt/ovai/webhook/config/templateblock.hcl
            - -tmpldefaultfile=/opt/ovai/webhook/config/templatedefault.tmpl
            - -podlchooksfile=/opt/ovai/webhook/config/podlifecyclehooks.yaml
            - -logtostderr
            - -stderrthreshold=0
            - -v={{ .Values.mutatingwebhook.loglevel }}
            - 2>&1
          ports:
            - name: webhook-api
              containerPort: {{ .Values.image.port }}
            {{- if .Values.image.metricsPort }}
            - name: http-metrics
              containerPort: {{ .Values.image.metricsPort }}
            {{- end }}
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - ps -edf | grep vaultinjector-webhook
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - ps -edf | grep vaultinjector-webhook
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            successThreshold: {{ .Values.probes.readiness.successThreshold }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
          volumeMounts:
            - name: webhook-certs
              mountPath: /opt/ovai/webhook/certs
              readOnly: true
            - name: webhook-config
              mountPath: /opt/ovai/webhook/config
          {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- end }}
      {{- if .Values.nodeAffinity }}
      affinity:
        nodeAffinity:
{{ toYaml .Values.nodeAffinity | indent 10 }}
      {{- end }}
      volumes:
        - name: webhook-certs
          secret:
            secretName: {{ .Values.mutatingwebhook.cert.secretName }}
        - name: webhook-config
          configMap:
            name: {{ include "open-vault-agent-injector.fullname" . }}
